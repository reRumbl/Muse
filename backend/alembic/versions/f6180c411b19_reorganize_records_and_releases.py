"""Reorganize records and releases

Revision ID: f6180c411b19
Revises: 3efae64e169c
Create Date: 2025-09-11 11:29:57.866079

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f6180c411b19'
down_revision: Union[str, Sequence[str], None] = '3efae64e169c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('release',
    sa.Column('record_id', sa.Uuid(), nullable=False),
    sa.Column('release_date', sa.Date(), nullable=False),
    sa.Column('wholesale_supplier_id', sa.Uuid(), nullable=False),
    sa.Column('wholesale_price', sa.Integer(), nullable=False),
    sa.Column('retail_price', sa.Integer(), nullable=False),
    sa.Column('last_year_sold', sa.Integer(), nullable=False),
    sa.Column('this_year_sold', sa.Integer(), nullable=False),
    sa.Column('in_stock', sa.Integer(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['record_id'], ['record.id'], ),
    sa.ForeignKeyConstraint(['wholesale_supplier_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.drop_table('record_release')
    op.create_unique_constraint(None, 'company', ['id'])
    op.create_unique_constraint(None, 'composition', ['id'])
    op.create_unique_constraint(None, 'ensemble', ['id'])
    op.create_unique_constraint(None, 'ensemble_member', ['id'])
    op.create_unique_constraint(None, 'musician', ['id'])
    op.create_unique_constraint(None, 'performance', ['id'])
    op.create_unique_constraint(None, 'record', ['id'])
    op.create_unique_constraint(None, 'record_performance', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'record_performance', type_='unique')
    op.drop_constraint(None, 'record', type_='unique')
    op.drop_constraint(None, 'performance', type_='unique')
    op.drop_constraint(None, 'musician', type_='unique')
    op.drop_constraint(None, 'ensemble_member', type_='unique')
    op.drop_constraint(None, 'ensemble', type_='unique')
    op.drop_constraint(None, 'composition', type_='unique')
    op.drop_constraint(None, 'company', type_='unique')
    op.create_table('record_release',
    sa.Column('record_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('release_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('wholesale_supplier_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('wholesale_price', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('retail_price', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('last_year_sold', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('this_year_sold', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('in_stock', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['record_id'], ['record.id'], name=op.f('record_release_record_id_fkey')),
    sa.ForeignKeyConstraint(['wholesale_supplier_id'], ['company.id'], name=op.f('record_release_wholesale_supplier_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('record_release_pkey'))
    )
    op.drop_table('release')
    # ### end Alembic commands ###
