"""Database Creation

Revision ID: 3efae64e169c
Revises: 
Create Date: 2025-09-06 22:20:24.194607

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3efae64e169c'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('company',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('ensemble',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('orchestra', 'group', 'quartet', 'quintet', name='ensembletype'), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('musician',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('surname', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('performancer', 'composer', 'conductor', 'supervisor', name='musiciantype'), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('composition',
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('composer_id', sa.Uuid(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['composer_id'], ['musician.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('ensemble_member',
    sa.Column('ensemble_id', sa.Uuid(), nullable=False),
    sa.Column('musician_id', sa.Uuid(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['ensemble_id'], ['ensemble.id'], ),
    sa.ForeignKeyConstraint(['musician_id'], ['musician.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('record',
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('manufacturer_id', sa.Uuid(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['manufacturer_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('performance',
    sa.Column('composition_id', sa.Uuid(), nullable=False),
    sa.Column('ensemble_id', sa.Uuid(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['composition_id'], ['composition.id'], ),
    sa.ForeignKeyConstraint(['ensemble_id'], ['ensemble.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('record_release',
    sa.Column('record_id', sa.Uuid(), nullable=False),
    sa.Column('release_date', sa.Date(), nullable=False),
    sa.Column('wholesale_supplier_id', sa.Uuid(), nullable=False),
    sa.Column('wholesale_price', sa.Integer(), nullable=False),
    sa.Column('retail_price', sa.Integer(), nullable=False),
    sa.Column('last_year_sold', sa.Integer(), nullable=False),
    sa.Column('this_year_sold', sa.Integer(), nullable=False),
    sa.Column('in_stock', sa.Integer(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['record_id'], ['record.id'], ),
    sa.ForeignKeyConstraint(['wholesale_supplier_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('record_performance',
    sa.Column('record_id', sa.Uuid(), nullable=False),
    sa.Column('performance_id', sa.Uuid(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['performance_id'], ['performance.id'], ),
    sa.ForeignKeyConstraint(['record_id'], ['record.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('record_performance')
    op.drop_table('record_release')
    op.drop_table('performance')
    op.drop_table('record')
    op.drop_table('ensemble_member')
    op.drop_table('composition')
    op.drop_table('musician')
    op.drop_table('ensemble')
    op.drop_table('company')
    # ### end Alembic commands ###
